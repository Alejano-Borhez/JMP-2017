buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.+"
    }
}


List spring = ["org.springframework:spring-core:$spring_version",
               "org.springframework:spring-beans:$spring_version",
               "org.springframework:spring-context:$spring_version",
               "org.springframework:spring-jdbc:$spring_version"
]

List test = ["org.springframework:spring-test:$spring_version",
             "junit:junit:$junit_version",
             "org.easymock:easymock:$easymock_version",
             "org.powermock:powermock-core:$powermock_version",
             "org.powermock:powermock-api-mockito:$powermock_version",
             "org.powermock:powermock-module-junit4:$powermock_version",
             "org.powermock:powermock-api-easymock:$powermock_version"]

List jackson = ["com.fasterxml.jackson.core:jackson-databind:$jackson_version"]

List logging = ["org.apache.logging.log4j:log4j-api:$log4j2_version",
                "org.apache.logging.log4j:log4j-core:$log4j2_version",
                "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"
]

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'org.sonarqube'

    findbugs.ignoreFailures = true

    version = '1.0-SNAPSHOT'

//    test.ignoreFailures = true

    project.checkstyle.configFile = new File("../config/checkstyle/checkstyle.xml")

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
    }

    dependencies {
        compile spring, logging, jackson
        compile "com.puppycrawl.tools:checkstyle:$checkstyle_version"
        compile test
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled false
            xml.destination "${buildDir}/reports/jacoco/report.xml"
            html.destination "${buildDir}/reports/jacoco/html"
        }
    }

    File testResultsDir = project.test.reports.junitXml.destination
    properties["sonar.surefire.reportsPath"] = testResultsDir.exists() ? testResultsDir : null
    properties["sonar.junit.reportsPath"] = testResultsDir.exists() ? testResultsDir : null

    build.dependsOn jacocoTestReport
}